@model Editlio.Web.Models.PageViewModel

<!-- CodeMirror CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/codemirror.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/theme/dracula.min.css" />
<!-- Eklenti CSS'leri -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/fold/foldgutter.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/hint/show-hint.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/dialog/dialog.css" />

<style>
    .CodeMirror {
        height: calc(100vh - 56px);
        font-size: 15px;
    }
</style>

<div id="editor-container"></div>

<!-- CodeMirror ve Eklentiler -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/mode/javascript/javascript.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/edit/closebrackets.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/edit/matchbrackets.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/selection/active-line.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/fold/foldcode.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/fold/foldgutter.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/fold/brace-fold.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/hint/show-hint.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/hint/javascript-hint.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/search/search.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/search/searchcursor.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.10/addon/dialog/dialog.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.0/dist/browser/signalr.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const slug = "@Model.Slug";

        // SignalR bağlantısını başlat
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7273/hubs/realtime")
            .withAutomaticReconnect()
            .build();

        // CodeMirror editörü başlat
        const editor = CodeMirror(document.getElementById("editor-container"), {
            value: `@Html.Raw(Model.Content)`,
            mode: "javascript",
            theme: "dracula",
            lineNumbers: true,
            autoCloseBrackets: true,
            matchBrackets: true,        // Parantezleri eşleştirme
            styleActiveLine: true,      // Aktif satırı vurgulama
            lineWrapping: true,         // Uzun satırları kaydırma
            foldGutter: true,           // Kod katlama
            gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
            tabSize: 2,                 // Tab genişliği
            indentWithTabs: false,      // Space ile girinti
            extraKeys: {
                "Ctrl-Space": "autocomplete",  // Otomatik tamamlama
                "Ctrl-F": "find",             // Arama
                "Ctrl-H": "replace",          // Değiştirme
                "Alt-F": "findPersistent",    // Sürekli arama
                "Ctrl-/": function (cm) {      // Yorum satırı
                    cm.toggleComment();
                },
                "Ctrl-J": "toMatchingTag",    // Eşleşen taga git
                "Tab": function (cm) {         // Tab tuşu davranışı
                    if (cm.somethingSelected()) {
                        cm.indentSelection("add");
                    } else {
                        cm.replaceSelection("  ", "end");
                    }
                }
            }
        });

        // Otomatik tamamlama için olay dinleyici
        editor.on("keyup", function (cm, event) {
            if (!cm.state.completionActive &&
                event.keyCode > 64 && event.keyCode < 91) {
                CodeMirror.commands.autocomplete(cm, null, { completeSingle: false });
            }
        });

        // SignalR bağlantısını başlat
        connection.start()
            .then(() => {
                console.log("SignalR connected.");
                connection.invoke("JoinPage", slug)
                    .catch(err => console.error("Error joining group:", err));

                connection.on("ReceiveUpdatedContent", (updatedContent) => {
                    if (editor.getValue() !== updatedContent) {
                        const cursor = editor.getCursor();
                        const scrollInfo = editor.getScrollInfo();
                        editor.setValue(updatedContent);
                        editor.setCursor(cursor);
                        editor.scrollTo(scrollInfo.left, scrollInfo.top);
                    }
                });

                let debounceTimer;
                editor.on("change", () => {
                    clearTimeout(debounceTimer);
                    debounceTimer = setTimeout(() => {
                        const updatedContent = editor.getValue();
                        connection.invoke("UpdatePageContent", slug, updatedContent)
                            .catch(err => console.error("Error updating content:", err));
                    }, 300);
                });
            })
            .catch(err => console.error("SignalR connection failed:", err));
    });
</script>