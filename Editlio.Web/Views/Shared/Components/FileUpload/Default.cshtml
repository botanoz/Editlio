<div class="mt-3">
    <h4>Files</h4>
    <form id="fileUploadForm" enctype="multipart/form-data">
        <input type="file" id="fileInput" name="file" multiple />
        <button type="submit" class="btn btn-primary">Upload</button>
    </form>
    <ul id="fileList" class="list-group mt-2">
        @foreach (var file in Model.Files)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>@file.FileName</span>
                <a href="/Page/Download/@file.Id" class="btn btn-sm btn-primary">
                    <i class="fas fa-download"></i> Download
                </a>
            </li>
        }
    </ul>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const fileUploadForm = document.getElementById("fileUploadForm");
        const fileInput = document.getElementById("fileInput");
        const fileList = document.getElementById("fileList");
        const pageId = "@Model.Id";

        // Handle file upload
        fileUploadForm.addEventListener("submit", async (event) => {
            event.preventDefault();

            if (fileInput.files.length === 0) {
                alert("Please select at least one file to upload.");
                return;
            }

            const formData = new FormData();
            for (const file of fileInput.files) {
                formData.append("files", file);
            }

            try {
                const response = await fetch(`/Page/UploadFiles?slug=${pageId}`, {
                    method: "POST",
                    body: formData,
                });

                if (!response.ok) {
                    alert("Failed to upload files. Please try again.");
                    return;
                }

                const uploadedFiles = await response.json();
                updateFileList(uploadedFiles);
                fileInput.value = ""; // Clear the file input
            } catch (error) {
                console.error("Error uploading files:", error);
                alert("An error occurred while uploading files.");
            }
        });

        // Update file list dynamically
        function updateFileList(files) {
            fileList.innerHTML = "";
            files.forEach(file => {
                const listItem = document.createElement("li");
                listItem.className = "list-group-item d-flex justify-content-between align-items-center";
                listItem.innerHTML = `
                        <span>${file.fileName}</span>
                        <a href="/Page/Download/${file.id}" class="btn btn-sm btn-primary">
                            <i class="fas fa-download"></i> Download
                        </a>
                    `;
                fileList.appendChild(listItem);
            });
        }

        // Initial file list fetch (optional, in case dynamic updates are needed)
        async function fetchFiles() {
            try {
                const response = await fetch(`/Page/GetFiles?slug=${pageId}`);
                if (!response.ok) {
                    console.error("Failed to fetch files.");
                    return;
                }

                const files = await response.json();
                updateFileList(files);
            } catch (error) {
                console.error("Error fetching files:", error);
            }
        }

        fetchFiles(); // Load initial files on page load
    });
</script>
